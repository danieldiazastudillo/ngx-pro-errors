{"version":3,"sources":["webpack:///ngx-pro-errors/src/lib/ngx-pro-errors.module.ts","webpack:///ngx-pro-errors/src/lib/pro-error.directive.ts","webpack:///ngx-pro-errors/src/lib/pro-errors.directive.ts","webpack:///ngx-pro-errors/src/lib/utils/toArray.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/form-test/form-test.component.ts","webpack:///src/app/form-test/form-test.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["NgxProErrorsModule","declarations","imports","exports","ProErrorDirective","ngxErrors","hidden","errorNames","rules","statesSubject$","states$","asObservable","pipe","errors","subject$","Boolean","obj","indexOf","errorName","states","every","rule","subscription","subscribe","next","statesComb","errorsComb","control","hasError","filter","complete","unsubscribe","value","selector","ProErrorsDirective","form","ready","name","conditions","checkPropState","getError","prop","controlPropsState","condition","charAt","Object","keys","forEach","get","controlName","setTimeout","checkStatus","statusChanges","bind","error","console","log","exportAs","toArray","Array","isArray","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","module","id","routes","AppRoutingModule","forRoot","AppComponent","title","templateUrl","styleUrls","AppModule","providers","bootstrap","FormTestComponent","fb","text","formObj","email","required","group","testForm","alert","createForm","bindForm","onSubmit","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { ProErrorDirective } from './pro-error.directive';\nimport { ProErrorsDirective } from './pro-errors.directive';\n\n\n\n@NgModule({\n  declarations: [ProErrorDirective, ProErrorsDirective],\n  imports: [\n  ],\n  exports: [ProErrorDirective, ProErrorsDirective]\n})\nexport class NgxProErrorsModule { }\n","import { Directive, OnInit, OnDestroy, DoCheck, Input, HostBinding, Inject, forwardRef } from '@angular/core';\nimport { ErrorOptions } from './pro-errors';\nimport { toArray } from './utils/toArray';\nimport { combineLatest, Subscription, Subject, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ProErrorsDirective } from './pro-errors.directive';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[ngxError]'\n})\nexport class ProErrorDirective implements OnInit, OnDestroy, DoCheck {\n\n  @Input() set ngxError(value: ErrorOptions) {\n    this.errorNames = toArray(value);\n  }\n\n  @Input() set when(value: ErrorOptions) {\n    this.rules = toArray(value);\n  }\n\n  @HostBinding('hidden') public hidden = true;\n\n  private errorNames: string[] = [];\n  private rules: string[] = [];\n  private subscription: Subscription;\n  private statesSubject$: Subject<string[]>;\n  private states$: Observable<string[]>;\n\n\n  constructor(@Inject(forwardRef(() => ProErrorsDirective)) private ngxErrors: ProErrorsDirective) { }\n\n  ngOnInit() {\n    this.statesSubject$ = new Subject<string[]>();\n    this.states$ = this.statesSubject$.asObservable().pipe(distinctUntilChanged());\n\n    const errors = this.ngxErrors.subject$.pipe(\n      filter(Boolean),\n      // tslint:disable-next-line: no-bitwise\n      filter((obj: any) => !!~this.errorNames.indexOf(obj.errorName))\n    );\n\n    const states = this.states$.pipe(\n      // tslint:disable-next-line: no-bitwise no-shadowed-variable\n      map(states => this.rules.every(rule => !!~states.indexOf(rule)))\n    );\n\n    this.subscription = combineLatest([states, errors]).subscribe({\n      next: ([statesComb, errorsComb]) => {\n        return this.hidden = !(statesComb && errorsComb.control.hasError(errorsComb.errorName));\n      }\n    });\n  }\n\n  ngDoCheck() {\n    this.statesSubject$.next(\n      this.rules.filter(rule => (this.ngxErrors.control as any)[rule])\n    );\n  }\n\n  ngOnDestroy() {\n    this.statesSubject$.complete();\n    this.subscription.unsubscribe();\n  }\n\n\n\n}\n","import {\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  AfterViewInit,\n  OnInit\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { IErrorDetails, ErrorOptions } from './pro-errors';\nimport { AbstractControl, FormGroupDirective, ValidationErrors } from '@angular/forms';\nimport { toArray } from './utils/toArray';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[ngxErrors]',\n  exportAs: 'ngxErrors'\n})\nexport class ProErrorsDirective implements OnInit, OnChanges, OnDestroy, AfterViewInit {\n  // tslint:disable-next-line: no-input-rename\n  @Input('ngxErrors') private readonly controlName: string;\n\n  public subject$: BehaviorSubject<IErrorDetails>;\n  public control: AbstractControl;\n  private ready = false;\n\n  constructor(private form: FormGroupDirective) {}\n\n  get errors() {\n    if (!this.ready) {\n      return;\n    }\n    return this.control.errors;\n  }\n\n  get hasErrors() {\n    return !!this.errors;\n  }\n\n  hasError(name: string, conditions: ErrorOptions): boolean {\n    return this.checkPropState('invalid', name, conditions);\n  }\n\n  isValid(name: string, conditions: ErrorOptions): boolean {\n    return this.checkPropState('valid', name, conditions);\n  }\n\n  getError(name: string) {\n    if (!this.ready) {\n      return;\n    }\n    return this.control.getError(name);\n  }\n\n  private checkPropState(\n    prop: string,\n    name: string,\n    conditions: ErrorOptions\n  ): boolean {\n    if (!this.ready) {\n      return;\n    }\n\n    const controlPropsState =\n      !conditions ||\n      toArray(conditions).every((condition: string) => this.control[condition]);\n\n    if (name.charAt(0) === '*') {\n      return this.control[prop] && controlPropsState;\n    }\n\n    return prop === 'valid'\n      ? !this.control.hasError(name)\n      : this.control.hasError(name) && controlPropsState;\n  }\n\n  private checkStatus(): void {\n    const control: AbstractControl = this.control;\n    const errors: ValidationErrors = control.errors;\n    this.ready = true;\n\n    if (!errors) {\n      return;\n    }\n\n    Object.keys(errors).forEach((errorName: any) => {\n      this.subject$.next({ control, errorName });\n    });\n  }\n\n  ngOnInit() {\n    this.subject$ = new BehaviorSubject<IErrorDetails>(null);\n  }\n\n  ngOnChanges() {\n    this.control = this.form.control.get(this.controlName);\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.checkStatus();\n      this.control.statusChanges.subscribe({\n        next: this.checkStatus.bind(this),\n        error: () => console.log('error'),\n        complete: () => console.log('completed')\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.subject$.complete();\n  }\n}\n","import { ErrorOptions } from '../pro-errors';\r\n\r\nexport const toArray = (value: ErrorOptions): string[] => Array.isArray(value) ? value : [value];\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ngx-pro-errors-showcase';\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12 text-center\">\n      <h1 class=\"display-4\">ngx-pro-errors</h1>\n      <hr />\n      <p class=\"lead\">\n        This is a third iteration of <a href=\"https://github.com/UltimateAngular/ngx-errors\" target=\"_blank\">@ultimate/ngxerrors</a>. We don't know why but UltimateAngular never\n        updated this package to be used with Angular 6 (when <strong>rxjs</strong> was updated to use pipeable operators). Enters <a href=\"https://github.com/hackages/ngx-errors\" target=\"_blank\">@hackages/ngx-errors</a>\n        who updated the project and most of it's dependencies so we could use it in our projects as usual\n      </p>\n    </div>\n\n  </div>\n\n  <div class=\"row my-5\">\n    <div class=\"col-6 mx-auto\">\n      <div class=\"card p-4 shadow-lg\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Test Form</h5>\n          <p class=\"card-text\">Very simple form. If you want to try more features clone the repo and run the showcase</p>\n        </div>\n        <div class=\"card-body\">\n          <app-form-test></app-form-test>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12 text-center\">\n      <p class=\"lead\">\n        The original project was using some custom Webpack, Rollup & Yarn configuration and Angular CLI was nowhere to be seen. This is the same project as <strong>@hackages</strong> but using the current\n        CLI tools so we can take advantage of update schematics and a more aligned design with what <strong>Angular</strong> is right now (meaning Ivy). If you are using the original project,\n        usage instructions are the same, nothing has been changed. Good luck!\n      </p>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgxProErrorsModule } from './../../../ngx-pro-errors/src/lib/ngx-pro-errors.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormTestComponent } from './form-test/form-test.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormTestComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    NgxProErrorsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-test',\n  templateUrl: './form-test.component.html',\n  styleUrls: ['./form-test.component.scss']\n})\nexport class FormTestComponent implements OnInit {\n\n  // This props are just for binding purposes, they are not required to work with a form\n  email: AbstractControl;\n  name: AbstractControl;\n  // -----------------------------------------------\n\n  testForm: FormGroup;\n\n  // Errors array. Probably you should provide these with a service or something like that to make\n  // them app wide\n  errors = [\n    {\n      name: 'required',\n      text: 'This field is required. Custom Message',\n      rules: ['touched', 'invalid']\n    },\n    {\n      name: 'email',\n      text: 'Must be a valid email address. Custom Message',\n      rules: ['touched', 'invalid']\n    },\n    {\n      name: 'minlength',\n      text: 'This field is too short. Custom Message',\n      rules: ['dirty']\n    }\n  ];\n\n  constructor(private fb: FormBuilder) { }\n\n  /**\n   * Returns FormGroup object\n   */\n  private createForm(): FormGroup {\n    const formObj = {\n      email: ['', [Validators.required, Validators.email]],\n      name: ['', [Validators.required]]\n    };\n\n    return this.fb.group(formObj);\n  }\n\n  /**\n   * Binds FormGroup object to props so we can save some code in our HTML template\n   * Not required.\n   */\n  private bindForm(): void {\n    this.email = this.testForm.get('email');\n    this.name = this.testForm.get('name');\n  }\n\n  /**\n   * Submits form and logs props. Just to be sure...\n   */\n  onSubmit() {\n    alert('Congratulations! Form submitted.');\n    console.log('Form Values:');\n    console.log(this.testForm.value);\n  }\n\n  ngOnInit(): void {\n    this.testForm = this.createForm();\n    this.bindForm();\n  }\n\n}\n","<form [formGroup]=\"testForm\" (submit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input\n      type=\"email\"\n      class=\"form-control\"\n      placeholder=\"Your email address\"\n      formControlName=\"email\"\n      [class.is-valid]=\"email.valid\"\n      [class.is-invalid]=\"email.invalid && email.touched\"\n      autofocus\n    />\n\n    <div ngxErrors=\"email\" class=\"invalid-feedback d-block\">\n      <p\n        class=\"my-0\"\n        *ngFor=\"let error of errors\"\n        [ngxError]=\"error.name\"\n        [when]=\"error.rules\"\n      >\n        {{ error.text }}\n      </p>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Name</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Your name\"\n      formControlName=\"name\"\n      [class.is-valid]=\"name.valid\"\n      [class.is-invalid]=\"name.invalid && name.touched\"\n    />\n\n    <div ngxErrors=\"name\" class=\"invalid-feedback d-block\">\n      <p\n        class=\"my-0\"\n        *ngFor=\"let error of errors\"\n        [ngxError]=\"error.name\"\n        [when]=\"error.rules\"\n      >\n        {{ error.text }}\n      </p>\n    </div>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-secondary btn-block my-5\" [disabled]=\"testForm.invalid\">SUBMIT</button>\n\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}